# -*- coding: utf-8 -*-
"""pattren Project ARIMA+LSTM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uTDborfaFFmGbiyamUIjNuxnB1TwtX_x

ARIMA
"""

pip install pmdarima

import pandas as pd
import numpy as np

from google.colab import drive
drive.mount('/content/gdrive/')

df = pd.read_csv("/content/gdrive/MyDrive/ticket/pr_datax.csv")

from google.colab import drive
drive.mount('/content/drive')

df.head(5)

df['PopDensity'].plot(figsize=(10,5))

df['PopMale'].plot(figsize=(10,5))

df['PopTotal'].plot(figsize=(10,5))

df.shape

from statsmodels.tsa.stattools import adfuller

def ad_test(dataset):
  dftest= adfuller(dataset, autolag='AIC')
  print("1. ADF: ",dataset[0])
  print("2. P-value: ",dataset[1])
  print("3. Num of lags: ",dataset[2])
  print("4. Number of observation used for ADF regression and critical values calculation: ",dataset[3])
  print("5. Critical-value: ")
  for key, val in dftest[4].items():
    print("\t",key," :", val)

ad_test(df['PopTotal'])

ad_test(df['PopDensity'])

from pmdarima import auto_arima
import warnings
warnings.filterwarnings("ignore")

stepwise_fit= auto_arima(df['PopDensity'],trace=True,
                         suppress_warnings=True)
stepwise_fit.summary()

stepwise_fit= auto_arima(df['PopTotal'],trace=True,
                         suppress_warnings=True)
stepwise_fit.summary()

"""### **split data with traning & testing**"""

from statsmodels.tsa.arima_model import ARIMA

print(df.shape)
train=df.iloc[:-500]
test=df.iloc[-1500:]
print(train.shape, test.shape)

model=ARIMA(train['PopDensity'],order=(1,1,0))
model=model.fit()
model.summary()

start=len(train)
end=len(train)+len(test)-1
pred=model.predict(start=start,end=end,typ='levels')
print(pred)

"""# Plot"""

pred.plot(legend=True)
test['PopDensity'].plot(legend=True)

pred.plot(legend=True)
test['PopTotal'].plot(legend=True)

test['PopDensity'].mean()

model2=ARIMA(df['PopDensity'],order=(1,1,0))
model2=model2.fit()
df.head(),df.tail()